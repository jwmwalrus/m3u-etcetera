syntax = 'proto3';

package m3uetcpb;

option go_package = './m3uetcpb';

import 'google/protobuf/empty.proto';
import 'api/m3uetcpb/perspective.proto';
import 'api/m3uetcpb/track.proto';

service PlaybackSvc {
    rpc GetPlayback(google.protobuf.Empty) returns (GetPlaybackResponse);
    rpc GetPlaybackList(google.protobuf.Empty) returns (GetPlaybackListResponse);
    rpc ExecutePlaybackAction(ExecutePlaybackActionRequest) returns (google.protobuf.Empty);

    rpc SubscribeToPlayback(google.protobuf.Empty) returns (stream SubscribeToPlaybackResponse);
    rpc UnsubscribeFromPlayback(UnsubscribeFromPlaybackRequest) returns (google.protobuf.Empty);
}

message GetPlaybackResponse {
    bool is_streaming = 1;
    bool is_playing = 2;
    bool is_paused = 3;
    bool is_stopped = 4;
    bool is_ready = 5;
    Playback playback = 6;
    Track track = 7;
}

message GetPlaybackListResponse {
    repeated Playback playback_entries = 1;
}

message ExecutePlaybackActionRequest {
    PlaybackAction action = 1;
    bool force = 2;
    int64 seek = 3;
    Perspective perspective = 4;
    repeated int64 ids = 5;
    repeated string locations = 6;
}

message SubscribeToPlaybackResponse {
    string subscription_id = 1;
    bool is_streaming = 2;
    bool is_playing = 3;
    bool is_paused = 4;
    bool is_stopped = 5;
    bool is_ready = 6;
    Playback playback = 7;
    Track track = 8;
}

message UnsubscribeFromPlaybackRequest {
    string subscription_id = 1;
}

message Playback {
    int64 id = 1;
    string location = 2;
    bool played = 3;
    int64 skip = 4;
    int64 track_id = 5;
    int64 created_at = 101;
    int64 updated_at = 102;
}

enum PlaybackAction {
    PB_NONE = 0;
    PB_PLAY = 1;
    PB_NEXT = 2;
    PB_PREVIOUS = 3;
    PB_SEEK = 4;
    PB_PAUSE = 5;
    PB_STOP = 6;
}
