syntax = 'proto3';

package m3uetcpb;

option go_package = './m3uetcpb';

import 'api/m3uetcpb/empty.proto';
import 'api/m3uetcpb/perspective.proto';
import 'api/m3uetcpb/track.proto';

service QuerySvc {
    rpc GetQuery(GetQueryRequest) returns (GetQueryResponse);
    rpc GetQueries(GetQueriesRequest) returns (GetQueriesResponse);
    rpc AddQuery(AddQueryRequest) returns (AddQueryResponse);
    rpc UpdateQuery(UpdateQueryRequest) returns (Empty);
    rpc RemoveQuery(RemoveQueryRequest) returns (Empty);

    rpc QueryBy(QueryByRequest) returns (QueryByResponse);
    rpc QueryInPlaylist(QueryInPlaylistRequest) returns (QueryInPlaylistResponse);
    rpc QueryInQueue(QueryInQueueRequest) returns (Empty);

    rpc SubscribeToQueryStore(Empty)
        returns (stream SubscribeToQueryStoreResponse);
    rpc UnsubscribeFromQueryStore(UnsubscribeFromQueryStoreRequest)
        returns (Empty);
}

message GetQueryRequest {
    int64 id = 1;
}
message GetQueryResponse {
    Query query = 1;
}

message GetQueriesRequest {
    int32 limit = 1;
    repeated int64 collection_ids = 2;
}

message GetQueriesResponse {
    repeated Query queries = 1;
}

message AddQueryRequest {
    Query query = 1;
}

message AddQueryResponse {
    int64 id = 1;
}

message UpdateQueryRequest {
    Query query = 1;
}

message RemoveQueryRequest {
    int64 id = 1;
}

message QueryByRequest {
    Query query = 1;
}

message QueryByResponse {
    repeated Track tracks = 1;
}

message QueryInPlaylistRequest {
    int64 id = 1;
    int64 playlist_id = 2;
}

message QueryInPlaylistResponse {
    int64 playlist_id = 1;
}

message QueryInQueueRequest {
    Perspective perspective = 1;
    int64 id = 2;
}

message SubscribeToQueryStoreResponse {
    string subscription_id = 1;
    QueryEvent event = 2;
    Query query = 3;
}

message UnsubscribeFromQueryStoreRequest {
    string subscription_id = 1;
}

message Query {
    int64 id = 1;
    string name = 2;
    string description = 3;
    bool random = 4;
    int32 rating = 5;
    int32 limit = 6;
    string params = 7;
    int64 from = 8;
    int64 to = 9;
    bool read_only = 10;
    repeated int64 collection_ids = 11;
    int64 created_at = 101;
    int64 updated_at = 102;
}

enum QueryEvent {
    QYE_NONE = 0;
    QYE_INITIAL = 1;
    QYE_INITIAL_ITEM = 2;
    QYE_INITIAL_DONE = 3;
    QYE_ITEM_ADDED = 4;
    QYE_ITEM_CHANGED = 5;
    QYE_ITEM_REMOVED = 6;
}
