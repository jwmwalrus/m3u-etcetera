// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: api/m3uetcpb/collection.proto

package m3uetcpb

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CollectionEvent int32

const (
	CollectionEvent_CE_NONE          CollectionEvent = 0
	CollectionEvent_CE_INITIAL       CollectionEvent = 1
	CollectionEvent_CE_INITIAL_ITEM  CollectionEvent = 2
	CollectionEvent_CE_INITIAL_DONE  CollectionEvent = 3
	CollectionEvent_CE_ITEM_ADDED    CollectionEvent = 4
	CollectionEvent_CE_ITEM_CHANGED  CollectionEvent = 5
	CollectionEvent_CE_ITEM_REMOVED  CollectionEvent = 6
	CollectionEvent_CE_SCANNING      CollectionEvent = 7
	CollectionEvent_CE_SCANNING_DONE CollectionEvent = 8
)

// Enum value maps for CollectionEvent.
var (
	CollectionEvent_name = map[int32]string{
		0: "CE_NONE",
		1: "CE_INITIAL",
		2: "CE_INITIAL_ITEM",
		3: "CE_INITIAL_DONE",
		4: "CE_ITEM_ADDED",
		5: "CE_ITEM_CHANGED",
		6: "CE_ITEM_REMOVED",
		7: "CE_SCANNING",
		8: "CE_SCANNING_DONE",
	}
	CollectionEvent_value = map[string]int32{
		"CE_NONE":          0,
		"CE_INITIAL":       1,
		"CE_INITIAL_ITEM":  2,
		"CE_INITIAL_DONE":  3,
		"CE_ITEM_ADDED":    4,
		"CE_ITEM_CHANGED":  5,
		"CE_ITEM_REMOVED":  6,
		"CE_SCANNING":      7,
		"CE_SCANNING_DONE": 8,
	}
)

func (x CollectionEvent) Enum() *CollectionEvent {
	p := new(CollectionEvent)
	*p = x
	return p
}

func (x CollectionEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CollectionEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_api_m3uetcpb_collection_proto_enumTypes[0].Descriptor()
}

func (CollectionEvent) Type() protoreflect.EnumType {
	return &file_api_m3uetcpb_collection_proto_enumTypes[0]
}

func (x CollectionEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CollectionEvent.Descriptor instead.
func (CollectionEvent) EnumDescriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{0}
}

type GetCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCollectionRequest) Reset() {
	*x = GetCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_collection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionRequest) ProtoMessage() {}

func (x *GetCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_collection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionRequest.ProtoReflect.Descriptor instead.
func (*GetCollectionRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{0}
}

func (x *GetCollectionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *GetCollectionResponse) Reset() {
	*x = GetCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_collection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionResponse) ProtoMessage() {}

func (x *GetCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_collection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionResponse.ProtoReflect.Descriptor instead.
func (*GetCollectionResponse) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{1}
}

func (x *GetCollectionResponse) GetCollection() *Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

type GetAllCollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections []*Collection `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *GetAllCollectionsResponse) Reset() {
	*x = GetAllCollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_collection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCollectionsResponse) ProtoMessage() {}

func (x *GetAllCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_collection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCollectionsResponse.ProtoReflect.Descriptor instead.
func (*GetAllCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllCollectionsResponse) GetCollections() []*Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

type AddCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Location    string      `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Disabled    bool        `protobuf:"varint,4,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Remote      bool        `protobuf:"varint,5,opt,name=remote,proto3" json:"remote,omitempty"`
	Perspective Perspective `protobuf:"varint,6,opt,name=perspective,proto3,enum=m3uetcpb.Perspective" json:"perspective,omitempty"`
}

func (x *AddCollectionRequest) Reset() {
	*x = AddCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_collection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCollectionRequest) ProtoMessage() {}

func (x *AddCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_collection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCollectionRequest.ProtoReflect.Descriptor instead.
func (*AddCollectionRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{3}
}

func (x *AddCollectionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddCollectionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddCollectionRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *AddCollectionRequest) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *AddCollectionRequest) GetRemote() bool {
	if x != nil {
		return x.Remote
	}
	return false
}

func (x *AddCollectionRequest) GetPerspective() Perspective {
	if x != nil {
		return x.Perspective
	}
	return Perspective_MUSIC
}

type AddCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddCollectionResponse) Reset() {
	*x = AddCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_collection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCollectionResponse) ProtoMessage() {}

func (x *AddCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_collection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCollectionResponse.ProtoReflect.Descriptor instead.
func (*AddCollectionResponse) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{4}
}

func (x *AddCollectionResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RemoveCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveCollectionRequest) Reset() {
	*x = RemoveCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_collection_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCollectionRequest) ProtoMessage() {}

func (x *RemoveCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_collection_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCollectionRequest.ProtoReflect.Descriptor instead.
func (*RemoveCollectionRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveCollectionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NewName             string `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	NewDescription      string `protobuf:"bytes,3,opt,name=new_description,json=newDescription,proto3" json:"new_description,omitempty"`
	ResetDescription    bool   `protobuf:"varint,4,opt,name=reset_description,json=resetDescription,proto3" json:"reset_description,omitempty"`
	NewRemoteLocation   string `protobuf:"bytes,5,opt,name=new_remote_location,json=newRemoteLocation,proto3" json:"new_remote_location,omitempty"`
	ResetRemoteLocation bool   `protobuf:"varint,6,opt,name=reset_remote_location,json=resetRemoteLocation,proto3" json:"reset_remote_location,omitempty"`
	Enable              bool   `protobuf:"varint,7,opt,name=enable,proto3" json:"enable,omitempty"`
	Disable             bool   `protobuf:"varint,8,opt,name=disable,proto3" json:"disable,omitempty"`
	MakeRemote          bool   `protobuf:"varint,9,opt,name=make_remote,json=makeRemote,proto3" json:"make_remote,omitempty"`
	MakeLocal           bool   `protobuf:"varint,10,opt,name=make_local,json=makeLocal,proto3" json:"make_local,omitempty"`
}

func (x *UpdateCollectionRequest) Reset() {
	*x = UpdateCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_collection_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectionRequest) ProtoMessage() {}

func (x *UpdateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_collection_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectionRequest.ProtoReflect.Descriptor instead.
func (*UpdateCollectionRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCollectionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCollectionRequest) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

func (x *UpdateCollectionRequest) GetNewDescription() string {
	if x != nil {
		return x.NewDescription
	}
	return ""
}

func (x *UpdateCollectionRequest) GetResetDescription() bool {
	if x != nil {
		return x.ResetDescription
	}
	return false
}

func (x *UpdateCollectionRequest) GetNewRemoteLocation() string {
	if x != nil {
		return x.NewRemoteLocation
	}
	return ""
}

func (x *UpdateCollectionRequest) GetResetRemoteLocation() bool {
	if x != nil {
		return x.ResetRemoteLocation
	}
	return false
}

func (x *UpdateCollectionRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *UpdateCollectionRequest) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *UpdateCollectionRequest) GetMakeRemote() bool {
	if x != nil {
		return x.MakeRemote
	}
	return false
}

func (x *UpdateCollectionRequest) GetMakeLocal() bool {
	if x != nil {
		return x.MakeLocal
	}
	return false
}

type ScanCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdateTags bool  `protobuf:"varint,2,opt,name=update_tags,json=updateTags,proto3" json:"update_tags,omitempty"`
}

func (x *ScanCollectionRequest) Reset() {
	*x = ScanCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_collection_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanCollectionRequest) ProtoMessage() {}

func (x *ScanCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_collection_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanCollectionRequest.ProtoReflect.Descriptor instead.
func (*ScanCollectionRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{7}
}

func (x *ScanCollectionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScanCollectionRequest) GetUpdateTags() bool {
	if x != nil {
		return x.UpdateTags
	}
	return false
}

type SubscribeToCollectionStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string          `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	Event          CollectionEvent `protobuf:"varint,2,opt,name=event,proto3,enum=m3uetcpb.CollectionEvent" json:"event,omitempty"`
	// Types that are assignable to Item:
	//
	//	*SubscribeToCollectionStoreResponse_Collection
	//	*SubscribeToCollectionStoreResponse_Track
	Item isSubscribeToCollectionStoreResponse_Item `protobuf_oneof:"item"`
}

func (x *SubscribeToCollectionStoreResponse) Reset() {
	*x = SubscribeToCollectionStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_collection_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToCollectionStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToCollectionStoreResponse) ProtoMessage() {}

func (x *SubscribeToCollectionStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_collection_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToCollectionStoreResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToCollectionStoreResponse) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeToCollectionStoreResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *SubscribeToCollectionStoreResponse) GetEvent() CollectionEvent {
	if x != nil {
		return x.Event
	}
	return CollectionEvent_CE_NONE
}

func (m *SubscribeToCollectionStoreResponse) GetItem() isSubscribeToCollectionStoreResponse_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *SubscribeToCollectionStoreResponse) GetCollection() *Collection {
	if x, ok := x.GetItem().(*SubscribeToCollectionStoreResponse_Collection); ok {
		return x.Collection
	}
	return nil
}

func (x *SubscribeToCollectionStoreResponse) GetTrack() *Track {
	if x, ok := x.GetItem().(*SubscribeToCollectionStoreResponse_Track); ok {
		return x.Track
	}
	return nil
}

type isSubscribeToCollectionStoreResponse_Item interface {
	isSubscribeToCollectionStoreResponse_Item()
}

type SubscribeToCollectionStoreResponse_Collection struct {
	Collection *Collection `protobuf:"bytes,3,opt,name=collection,proto3,oneof"`
}

type SubscribeToCollectionStoreResponse_Track struct {
	Track *Track `protobuf:"bytes,4,opt,name=track,proto3,oneof"`
}

func (*SubscribeToCollectionStoreResponse_Collection) isSubscribeToCollectionStoreResponse_Item() {}

func (*SubscribeToCollectionStoreResponse_Track) isSubscribeToCollectionStoreResponse_Item() {}

type UnsubscribeFromCollectionStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *UnsubscribeFromCollectionStoreRequest) Reset() {
	*x = UnsubscribeFromCollectionStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_collection_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeFromCollectionStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeFromCollectionStoreRequest) ProtoMessage() {}

func (x *UnsubscribeFromCollectionStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_collection_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeFromCollectionStoreRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeFromCollectionStoreRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{9}
}

func (x *UnsubscribeFromCollectionStoreRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Idx            int32       `protobuf:"varint,2,opt,name=idx,proto3" json:"idx,omitempty"`
	Name           string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description    string      `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Location       string      `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	RemoteLocation string      `protobuf:"bytes,6,opt,name=remote_location,json=remoteLocation,proto3" json:"remote_location,omitempty"`
	Disabled       bool        `protobuf:"varint,7,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Remote         bool        `protobuf:"varint,8,opt,name=remote,proto3" json:"remote,omitempty"`
	Scanned        int32       `protobuf:"varint,9,opt,name=scanned,proto3" json:"scanned,omitempty"`
	Tracks         int64       `protobuf:"varint,10,opt,name=tracks,proto3" json:"tracks,omitempty"`
	Perspective    Perspective `protobuf:"varint,11,opt,name=perspective,proto3,enum=m3uetcpb.Perspective" json:"perspective,omitempty"`
	CreatedAt      int64       `protobuf:"varint,101,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      int64       `protobuf:"varint,102,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_collection_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_collection_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_collection_proto_rawDescGZIP(), []int{10}
}

func (x *Collection) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Collection) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *Collection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Collection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Collection) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Collection) GetRemoteLocation() string {
	if x != nil {
		return x.RemoteLocation
	}
	return ""
}

func (x *Collection) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *Collection) GetRemote() bool {
	if x != nil {
		return x.Remote
	}
	return false
}

func (x *Collection) GetScanned() int32 {
	if x != nil {
		return x.Scanned
	}
	return 0
}

func (x *Collection) GetTracks() int64 {
	if x != nil {
		return x.Tracks
	}
	return 0
}

func (x *Collection) GetPerspective() Perspective {
	if x != nil {
		return x.Perspective
	}
	return Perspective_MUSIC
}

func (x *Collection) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Collection) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_api_m3uetcpb_collection_proto protoreflect.FileDescriptor

var file_api_m3uetcpb_collection_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x33, 0x75, 0x65,
	0x74, 0x63, 0x70, 0x62, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x33, 0x75, 0x65,
	0x74, 0x63, 0x70, 0x62, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x33, 0x75, 0x65,
	0x74, 0x63, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd5, 0x01, 0x0a,
	0x14, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x22, 0x27, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a,
	0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf0, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x6d, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x6d, 0x61, 0x6b, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x48, 0x0a, 0x15, 0x53,
	0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x22, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x33, 0x75,
	0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x48, 0x00,
	0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22,
	0x50, 0x0a, 0x25, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x86, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69,
	0x64, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74,
	0x63, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52,
	0x0b, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0xbc, 0x01, 0x0a, 0x0f, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43,
	0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43,
	0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x02,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x44,
	0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x45, 0x5f, 0x49,
	0x54, 0x45, 0x4d, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44,
	0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x45, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x45, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x49,
	0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x08, 0x32, 0x86, 0x06, 0x0a, 0x0d, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x76, 0x63, 0x12, 0x50, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x6d,
	0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d,
	0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x6d, 0x33, 0x75,
	0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x50, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x4d, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x49, 0x0a, 0x0e, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x61,
	0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x13, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x64, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63,
	0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x69, 0x0a, 0x1e, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x2f, 0x2e, 0x6d, 0x33, 0x75, 0x65,
	0x74, 0x63, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_m3uetcpb_collection_proto_rawDescOnce sync.Once
	file_api_m3uetcpb_collection_proto_rawDescData = file_api_m3uetcpb_collection_proto_rawDesc
)

func file_api_m3uetcpb_collection_proto_rawDescGZIP() []byte {
	file_api_m3uetcpb_collection_proto_rawDescOnce.Do(func() {
		file_api_m3uetcpb_collection_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_m3uetcpb_collection_proto_rawDescData)
	})
	return file_api_m3uetcpb_collection_proto_rawDescData
}

var file_api_m3uetcpb_collection_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_m3uetcpb_collection_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_m3uetcpb_collection_proto_goTypes = []interface{}{
	(CollectionEvent)(0),                          // 0: m3uetcpb.CollectionEvent
	(*GetCollectionRequest)(nil),                  // 1: m3uetcpb.GetCollectionRequest
	(*GetCollectionResponse)(nil),                 // 2: m3uetcpb.GetCollectionResponse
	(*GetAllCollectionsResponse)(nil),             // 3: m3uetcpb.GetAllCollectionsResponse
	(*AddCollectionRequest)(nil),                  // 4: m3uetcpb.AddCollectionRequest
	(*AddCollectionResponse)(nil),                 // 5: m3uetcpb.AddCollectionResponse
	(*RemoveCollectionRequest)(nil),               // 6: m3uetcpb.RemoveCollectionRequest
	(*UpdateCollectionRequest)(nil),               // 7: m3uetcpb.UpdateCollectionRequest
	(*ScanCollectionRequest)(nil),                 // 8: m3uetcpb.ScanCollectionRequest
	(*SubscribeToCollectionStoreResponse)(nil),    // 9: m3uetcpb.SubscribeToCollectionStoreResponse
	(*UnsubscribeFromCollectionStoreRequest)(nil), // 10: m3uetcpb.UnsubscribeFromCollectionStoreRequest
	(*Collection)(nil),                            // 11: m3uetcpb.Collection
	(Perspective)(0),                              // 12: m3uetcpb.Perspective
	(*Track)(nil),                                 // 13: m3uetcpb.Track
	(*empty.Empty)(nil),                           // 14: google.protobuf.Empty
}
var file_api_m3uetcpb_collection_proto_depIdxs = []int32{
	11, // 0: m3uetcpb.GetCollectionResponse.collection:type_name -> m3uetcpb.Collection
	11, // 1: m3uetcpb.GetAllCollectionsResponse.collections:type_name -> m3uetcpb.Collection
	12, // 2: m3uetcpb.AddCollectionRequest.perspective:type_name -> m3uetcpb.Perspective
	0,  // 3: m3uetcpb.SubscribeToCollectionStoreResponse.event:type_name -> m3uetcpb.CollectionEvent
	11, // 4: m3uetcpb.SubscribeToCollectionStoreResponse.collection:type_name -> m3uetcpb.Collection
	13, // 5: m3uetcpb.SubscribeToCollectionStoreResponse.track:type_name -> m3uetcpb.Track
	12, // 6: m3uetcpb.Collection.perspective:type_name -> m3uetcpb.Perspective
	1,  // 7: m3uetcpb.CollectionSvc.GetCollection:input_type -> m3uetcpb.GetCollectionRequest
	14, // 8: m3uetcpb.CollectionSvc.GetAllCollections:input_type -> google.protobuf.Empty
	4,  // 9: m3uetcpb.CollectionSvc.AddCollection:input_type -> m3uetcpb.AddCollectionRequest
	6,  // 10: m3uetcpb.CollectionSvc.RemoveCollection:input_type -> m3uetcpb.RemoveCollectionRequest
	7,  // 11: m3uetcpb.CollectionSvc.UpdateCollection:input_type -> m3uetcpb.UpdateCollectionRequest
	8,  // 12: m3uetcpb.CollectionSvc.ScanCollection:input_type -> m3uetcpb.ScanCollectionRequest
	14, // 13: m3uetcpb.CollectionSvc.DiscoverCollections:input_type -> google.protobuf.Empty
	14, // 14: m3uetcpb.CollectionSvc.SubscribeToCollectionStore:input_type -> google.protobuf.Empty
	10, // 15: m3uetcpb.CollectionSvc.UnsubscribeFromCollectionStore:input_type -> m3uetcpb.UnsubscribeFromCollectionStoreRequest
	2,  // 16: m3uetcpb.CollectionSvc.GetCollection:output_type -> m3uetcpb.GetCollectionResponse
	3,  // 17: m3uetcpb.CollectionSvc.GetAllCollections:output_type -> m3uetcpb.GetAllCollectionsResponse
	5,  // 18: m3uetcpb.CollectionSvc.AddCollection:output_type -> m3uetcpb.AddCollectionResponse
	14, // 19: m3uetcpb.CollectionSvc.RemoveCollection:output_type -> google.protobuf.Empty
	14, // 20: m3uetcpb.CollectionSvc.UpdateCollection:output_type -> google.protobuf.Empty
	14, // 21: m3uetcpb.CollectionSvc.ScanCollection:output_type -> google.protobuf.Empty
	14, // 22: m3uetcpb.CollectionSvc.DiscoverCollections:output_type -> google.protobuf.Empty
	9,  // 23: m3uetcpb.CollectionSvc.SubscribeToCollectionStore:output_type -> m3uetcpb.SubscribeToCollectionStoreResponse
	14, // 24: m3uetcpb.CollectionSvc.UnsubscribeFromCollectionStore:output_type -> google.protobuf.Empty
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_m3uetcpb_collection_proto_init() }
func file_api_m3uetcpb_collection_proto_init() {
	if File_api_m3uetcpb_collection_proto != nil {
		return
	}
	file_api_m3uetcpb_perspective_proto_init()
	file_api_m3uetcpb_track_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_m3uetcpb_collection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_collection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_collection_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_collection_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_collection_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_collection_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_collection_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_collection_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_collection_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToCollectionStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_collection_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeFromCollectionStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_collection_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_m3uetcpb_collection_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*SubscribeToCollectionStoreResponse_Collection)(nil),
		(*SubscribeToCollectionStoreResponse_Track)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_m3uetcpb_collection_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_m3uetcpb_collection_proto_goTypes,
		DependencyIndexes: file_api_m3uetcpb_collection_proto_depIdxs,
		EnumInfos:         file_api_m3uetcpb_collection_proto_enumTypes,
		MessageInfos:      file_api_m3uetcpb_collection_proto_msgTypes,
	}.Build()
	File_api_m3uetcpb_collection_proto = out.File
	file_api_m3uetcpb_collection_proto_rawDesc = nil
	file_api_m3uetcpb_collection_proto_goTypes = nil
	file_api_m3uetcpb_collection_proto_depIdxs = nil
}
