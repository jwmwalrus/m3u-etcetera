syntax = 'proto3';

package m3uetcpb;

option go_package = './m3uetcpb';

import 'api/m3uetcpb/empty.proto';
import 'api/m3uetcpb/perspective.proto';
import 'api/m3uetcpb/track.proto';

service QueueSvc {
    rpc GetQueue(GetQueueRequest) returns (GetQueueResponse);
    rpc ExecuteQueueAction(ExecuteQueueActionRequest) returns (Empty);

    rpc SubscribeToQueueStore(Empty)
        returns (stream SubscribeToQueueStoreResponse);
    rpc UnsubscribeFromQueueStore(UnsubscribeFromQueueStoreRequest)
        returns (Empty);
}

message GetQueueRequest {
    Perspective perspective = 1;
    int32 limit = 2;
}

message GetQueueResponse {
    repeated QueueTrack queue_tracks = 1;
    repeated Track tracks = 2;
    int64 duration = 3;
}

message ExecuteQueueActionRequest {
    QueueAction action = 1;
    int32 position = 2;
    int32 from_position = 3;
    Perspective perspective = 4;
    repeated int64 ids = 5;
    repeated string locations = 6;
}

message SubscribeToQueueStoreResponse {
    string subscription_id = 1;
    repeated QueueTrack queue_tracks = 2;
    repeated Track tracks = 3;
    repeated PerspectiveDigest digest = 4;
}

message UnsubscribeFromQueueStoreRequest {
    string subscription_id = 1;
}

message QueueTrack {
    int64 id = 1;
    int32 position = 2;
    bool played = 3;
    string location = 4;
    Perspective perspective = 5;
    int64 track_id = 6;
    int64 created_at = 101;
    int64 updated_at = 102;
}

enum QueueAction {
    Q_NONE = 0;
    Q_APPEND = 1;
    Q_INSERT = 2;
    Q_PREPEND = 3;
    Q_DELETE = 4;
    Q_CLEAR = 5;
    Q_MOVE = 6;
}
