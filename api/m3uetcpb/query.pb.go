// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: api/m3uetcpb/query.proto

package m3uetcpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryEvent int32

const (
	QueryEvent_QYE_NONE         QueryEvent = 0
	QueryEvent_QYE_INITIAL      QueryEvent = 1
	QueryEvent_QYE_INITIAL_ITEM QueryEvent = 2
	QueryEvent_QYE_INITIAL_DONE QueryEvent = 3
	QueryEvent_QYE_ITEM_ADDED   QueryEvent = 4
	QueryEvent_QYE_ITEM_CHANGED QueryEvent = 5
	QueryEvent_QYE_ITEM_REMOVED QueryEvent = 6
)

// Enum value maps for QueryEvent.
var (
	QueryEvent_name = map[int32]string{
		0: "QYE_NONE",
		1: "QYE_INITIAL",
		2: "QYE_INITIAL_ITEM",
		3: "QYE_INITIAL_DONE",
		4: "QYE_ITEM_ADDED",
		5: "QYE_ITEM_CHANGED",
		6: "QYE_ITEM_REMOVED",
	}
	QueryEvent_value = map[string]int32{
		"QYE_NONE":         0,
		"QYE_INITIAL":      1,
		"QYE_INITIAL_ITEM": 2,
		"QYE_INITIAL_DONE": 3,
		"QYE_ITEM_ADDED":   4,
		"QYE_ITEM_CHANGED": 5,
		"QYE_ITEM_REMOVED": 6,
	}
)

func (x QueryEvent) Enum() *QueryEvent {
	p := new(QueryEvent)
	*p = x
	return p
}

func (x QueryEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_api_m3uetcpb_query_proto_enumTypes[0].Descriptor()
}

func (QueryEvent) Type() protoreflect.EnumType {
	return &file_api_m3uetcpb_query_proto_enumTypes[0]
}

func (x QueryEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryEvent.Descriptor instead.
func (QueryEvent) EnumDescriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{0}
}

type GetQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetQueryRequest) Reset() {
	*x = GetQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryRequest) ProtoMessage() {}

func (x *GetQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryRequest.ProtoReflect.Descriptor instead.
func (*GetQueryRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{0}
}

func (x *GetQueryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetQueryResponse) Reset() {
	*x = GetQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryResponse) ProtoMessage() {}

func (x *GetQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryResponse.ProtoReflect.Descriptor instead.
func (*GetQueryResponse) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{1}
}

func (x *GetQueryResponse) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type GetQueriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit         int32   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	CollectionIds []int64 `protobuf:"varint,2,rep,packed,name=collection_ids,json=collectionIds,proto3" json:"collection_ids,omitempty"`
}

func (x *GetQueriesRequest) Reset() {
	*x = GetQueriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueriesRequest) ProtoMessage() {}

func (x *GetQueriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueriesRequest.ProtoReflect.Descriptor instead.
func (*GetQueriesRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{2}
}

func (x *GetQueriesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetQueriesRequest) GetCollectionIds() []int64 {
	if x != nil {
		return x.CollectionIds
	}
	return nil
}

type GetQueriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queries []*Query `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *GetQueriesResponse) Reset() {
	*x = GetQueriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueriesResponse) ProtoMessage() {}

func (x *GetQueriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueriesResponse.ProtoReflect.Descriptor instead.
func (*GetQueriesResponse) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{3}
}

func (x *GetQueriesResponse) GetQueries() []*Query {
	if x != nil {
		return x.Queries
	}
	return nil
}

type AddQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *AddQueryRequest) Reset() {
	*x = AddQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQueryRequest) ProtoMessage() {}

func (x *AddQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQueryRequest.ProtoReflect.Descriptor instead.
func (*AddQueryRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{4}
}

func (x *AddQueryRequest) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type AddQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddQueryResponse) Reset() {
	*x = AddQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQueryResponse) ProtoMessage() {}

func (x *AddQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQueryResponse.ProtoReflect.Descriptor instead.
func (*AddQueryResponse) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{5}
}

func (x *AddQueryResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *UpdateQueryRequest) Reset() {
	*x = UpdateQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQueryRequest) ProtoMessage() {}

func (x *UpdateQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQueryRequest.ProtoReflect.Descriptor instead.
func (*UpdateQueryRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateQueryRequest) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type RemoveQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveQueryRequest) Reset() {
	*x = RemoveQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveQueryRequest) ProtoMessage() {}

func (x *RemoveQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveQueryRequest.ProtoReflect.Descriptor instead.
func (*RemoveQueryRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveQueryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryByRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *QueryByRequest) Reset() {
	*x = QueryByRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryByRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryByRequest) ProtoMessage() {}

func (x *QueryByRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryByRequest.ProtoReflect.Descriptor instead.
func (*QueryByRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{8}
}

func (x *QueryByRequest) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type QueryByResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tracks []*Track `protobuf:"bytes,1,rep,name=tracks,proto3" json:"tracks,omitempty"`
}

func (x *QueryByResponse) Reset() {
	*x = QueryByResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryByResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryByResponse) ProtoMessage() {}

func (x *QueryByResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryByResponse.ProtoReflect.Descriptor instead.
func (*QueryByResponse) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{9}
}

func (x *QueryByResponse) GetTracks() []*Track {
	if x != nil {
		return x.Tracks
	}
	return nil
}

type QueryInPlaylistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PlaylistId int64 `protobuf:"varint,2,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
}

func (x *QueryInPlaylistRequest) Reset() {
	*x = QueryInPlaylistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInPlaylistRequest) ProtoMessage() {}

func (x *QueryInPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInPlaylistRequest.ProtoReflect.Descriptor instead.
func (*QueryInPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{10}
}

func (x *QueryInPlaylistRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryInPlaylistRequest) GetPlaylistId() int64 {
	if x != nil {
		return x.PlaylistId
	}
	return 0
}

type QueryInPlaylistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaylistId int64 `protobuf:"varint,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
}

func (x *QueryInPlaylistResponse) Reset() {
	*x = QueryInPlaylistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInPlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInPlaylistResponse) ProtoMessage() {}

func (x *QueryInPlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInPlaylistResponse.ProtoReflect.Descriptor instead.
func (*QueryInPlaylistResponse) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{11}
}

func (x *QueryInPlaylistResponse) GetPlaylistId() int64 {
	if x != nil {
		return x.PlaylistId
	}
	return 0
}

type QueryInQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Perspective Perspective `protobuf:"varint,1,opt,name=perspective,proto3,enum=m3uetcpb.Perspective" json:"perspective,omitempty"`
	Id          int64       `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryInQueueRequest) Reset() {
	*x = QueryInQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryInQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInQueueRequest) ProtoMessage() {}

func (x *QueryInQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInQueueRequest.ProtoReflect.Descriptor instead.
func (*QueryInQueueRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{12}
}

func (x *QueryInQueueRequest) GetPerspective() Perspective {
	if x != nil {
		return x.Perspective
	}
	return Perspective_MUSIC
}

func (x *QueryInQueueRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SubscribeToQueryStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string     `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	Event          QueryEvent `protobuf:"varint,2,opt,name=event,proto3,enum=m3uetcpb.QueryEvent" json:"event,omitempty"`
	Query          *Query     `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SubscribeToQueryStoreResponse) Reset() {
	*x = SubscribeToQueryStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToQueryStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToQueryStoreResponse) ProtoMessage() {}

func (x *SubscribeToQueryStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToQueryStoreResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToQueryStoreResponse) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{13}
}

func (x *SubscribeToQueryStoreResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *SubscribeToQueryStoreResponse) GetEvent() QueryEvent {
	if x != nil {
		return x.Event
	}
	return QueryEvent_QYE_NONE
}

func (x *SubscribeToQueryStoreResponse) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type UnsubscribeFromQueryStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *UnsubscribeFromQueryStoreRequest) Reset() {
	*x = UnsubscribeFromQueryStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeFromQueryStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeFromQueryStoreRequest) ProtoMessage() {}

func (x *UnsubscribeFromQueryStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeFromQueryStoreRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeFromQueryStoreRequest) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{14}
}

func (x *UnsubscribeFromQueryStoreRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Random        bool                   `protobuf:"varint,4,opt,name=random,proto3" json:"random,omitempty"`
	Rating        int32                  `protobuf:"varint,5,opt,name=rating,proto3" json:"rating,omitempty"`
	Limit         int32                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Params        string                 `protobuf:"bytes,7,opt,name=params,proto3" json:"params,omitempty"`
	From          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=from,proto3" json:"from,omitempty"`
	To            *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=to,proto3" json:"to,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,10,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	CollectionIds []int64                `protobuf:"varint,11,rep,packed,name=collection_ids,json=collectionIds,proto3" json:"collection_ids,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,102,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_query_proto_rawDescGZIP(), []int{15}
}

func (x *Query) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Query) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Query) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Query) GetRandom() bool {
	if x != nil {
		return x.Random
	}
	return false
}

func (x *Query) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Query) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Query) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *Query) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Query) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Query) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *Query) GetCollectionIds() []int64 {
	if x != nil {
		return x.CollectionIds
	}
	return nil
}

func (x *Query) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Query) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_api_m3uetcpb_query_proto protoreflect.FileDescriptor

var file_api_m3uetcpb_query_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x33, 0x75, 0x65,
	0x74, 0x63, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x33, 0x75, 0x65, 0x74,
	0x63, 0x70, 0x62, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2f, 0x70, 0x65,
	0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2f, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x50, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x3f, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x22, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x24, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x0e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x3a, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63,
	0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73,
	0x22, 0x49, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x17, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x4b, 0x0a, 0x20, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0xc1, 0x03, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x97, 0x01, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x51, 0x59, 0x45, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x51, 0x59, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x41, 0x4c, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x51, 0x59, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x4c, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x51, 0x59,
	0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x03,
	0x12, 0x12, 0x0a, 0x0e, 0x51, 0x59, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x41, 0x44, 0x44,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x51, 0x59, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x51, 0x59,
	0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x06,
	0x32, 0xdc, 0x05, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x76, 0x63, 0x12, 0x41, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x6d, 0x33, 0x75, 0x65,
	0x74, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1b,
	0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x33,
	0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x41, 0x64, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x6d, 0x33,
	0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x33, 0x75, 0x65,
	0x74, 0x63, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x0b, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x6d, 0x33, 0x75, 0x65,
	0x74, 0x63, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x79, 0x12, 0x18, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x33,
	0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x12, 0x1d, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x53, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x0f, 0x2e, 0x6d, 0x33, 0x75, 0x65,
	0x74, 0x63, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x6d, 0x33, 0x75,
	0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x6f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x58, 0x0a, 0x19, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x2a, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_m3uetcpb_query_proto_rawDescOnce sync.Once
	file_api_m3uetcpb_query_proto_rawDescData = file_api_m3uetcpb_query_proto_rawDesc
)

func file_api_m3uetcpb_query_proto_rawDescGZIP() []byte {
	file_api_m3uetcpb_query_proto_rawDescOnce.Do(func() {
		file_api_m3uetcpb_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_m3uetcpb_query_proto_rawDescData)
	})
	return file_api_m3uetcpb_query_proto_rawDescData
}

var file_api_m3uetcpb_query_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_m3uetcpb_query_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_m3uetcpb_query_proto_goTypes = []interface{}{
	(QueryEvent)(0),                          // 0: m3uetcpb.QueryEvent
	(*GetQueryRequest)(nil),                  // 1: m3uetcpb.GetQueryRequest
	(*GetQueryResponse)(nil),                 // 2: m3uetcpb.GetQueryResponse
	(*GetQueriesRequest)(nil),                // 3: m3uetcpb.GetQueriesRequest
	(*GetQueriesResponse)(nil),               // 4: m3uetcpb.GetQueriesResponse
	(*AddQueryRequest)(nil),                  // 5: m3uetcpb.AddQueryRequest
	(*AddQueryResponse)(nil),                 // 6: m3uetcpb.AddQueryResponse
	(*UpdateQueryRequest)(nil),               // 7: m3uetcpb.UpdateQueryRequest
	(*RemoveQueryRequest)(nil),               // 8: m3uetcpb.RemoveQueryRequest
	(*QueryByRequest)(nil),                   // 9: m3uetcpb.QueryByRequest
	(*QueryByResponse)(nil),                  // 10: m3uetcpb.QueryByResponse
	(*QueryInPlaylistRequest)(nil),           // 11: m3uetcpb.QueryInPlaylistRequest
	(*QueryInPlaylistResponse)(nil),          // 12: m3uetcpb.QueryInPlaylistResponse
	(*QueryInQueueRequest)(nil),              // 13: m3uetcpb.QueryInQueueRequest
	(*SubscribeToQueryStoreResponse)(nil),    // 14: m3uetcpb.SubscribeToQueryStoreResponse
	(*UnsubscribeFromQueryStoreRequest)(nil), // 15: m3uetcpb.UnsubscribeFromQueryStoreRequest
	(*Query)(nil),                            // 16: m3uetcpb.Query
	(*Track)(nil),                            // 17: m3uetcpb.Track
	(Perspective)(0),                         // 18: m3uetcpb.Perspective
	(*timestamppb.Timestamp)(nil),            // 19: google.protobuf.Timestamp
	(*Empty)(nil),                            // 20: m3uetcpb.Empty
}
var file_api_m3uetcpb_query_proto_depIdxs = []int32{
	16, // 0: m3uetcpb.GetQueryResponse.query:type_name -> m3uetcpb.Query
	16, // 1: m3uetcpb.GetQueriesResponse.queries:type_name -> m3uetcpb.Query
	16, // 2: m3uetcpb.AddQueryRequest.query:type_name -> m3uetcpb.Query
	16, // 3: m3uetcpb.UpdateQueryRequest.query:type_name -> m3uetcpb.Query
	16, // 4: m3uetcpb.QueryByRequest.query:type_name -> m3uetcpb.Query
	17, // 5: m3uetcpb.QueryByResponse.tracks:type_name -> m3uetcpb.Track
	18, // 6: m3uetcpb.QueryInQueueRequest.perspective:type_name -> m3uetcpb.Perspective
	0,  // 7: m3uetcpb.SubscribeToQueryStoreResponse.event:type_name -> m3uetcpb.QueryEvent
	16, // 8: m3uetcpb.SubscribeToQueryStoreResponse.query:type_name -> m3uetcpb.Query
	19, // 9: m3uetcpb.Query.from:type_name -> google.protobuf.Timestamp
	19, // 10: m3uetcpb.Query.to:type_name -> google.protobuf.Timestamp
	19, // 11: m3uetcpb.Query.created_at:type_name -> google.protobuf.Timestamp
	19, // 12: m3uetcpb.Query.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 13: m3uetcpb.QuerySvc.GetQuery:input_type -> m3uetcpb.GetQueryRequest
	3,  // 14: m3uetcpb.QuerySvc.GetQueries:input_type -> m3uetcpb.GetQueriesRequest
	5,  // 15: m3uetcpb.QuerySvc.AddQuery:input_type -> m3uetcpb.AddQueryRequest
	7,  // 16: m3uetcpb.QuerySvc.UpdateQuery:input_type -> m3uetcpb.UpdateQueryRequest
	8,  // 17: m3uetcpb.QuerySvc.RemoveQuery:input_type -> m3uetcpb.RemoveQueryRequest
	9,  // 18: m3uetcpb.QuerySvc.QueryBy:input_type -> m3uetcpb.QueryByRequest
	11, // 19: m3uetcpb.QuerySvc.QueryInPlaylist:input_type -> m3uetcpb.QueryInPlaylistRequest
	13, // 20: m3uetcpb.QuerySvc.QueryInQueue:input_type -> m3uetcpb.QueryInQueueRequest
	20, // 21: m3uetcpb.QuerySvc.SubscribeToQueryStore:input_type -> m3uetcpb.Empty
	15, // 22: m3uetcpb.QuerySvc.UnsubscribeFromQueryStore:input_type -> m3uetcpb.UnsubscribeFromQueryStoreRequest
	2,  // 23: m3uetcpb.QuerySvc.GetQuery:output_type -> m3uetcpb.GetQueryResponse
	4,  // 24: m3uetcpb.QuerySvc.GetQueries:output_type -> m3uetcpb.GetQueriesResponse
	6,  // 25: m3uetcpb.QuerySvc.AddQuery:output_type -> m3uetcpb.AddQueryResponse
	20, // 26: m3uetcpb.QuerySvc.UpdateQuery:output_type -> m3uetcpb.Empty
	20, // 27: m3uetcpb.QuerySvc.RemoveQuery:output_type -> m3uetcpb.Empty
	10, // 28: m3uetcpb.QuerySvc.QueryBy:output_type -> m3uetcpb.QueryByResponse
	12, // 29: m3uetcpb.QuerySvc.QueryInPlaylist:output_type -> m3uetcpb.QueryInPlaylistResponse
	20, // 30: m3uetcpb.QuerySvc.QueryInQueue:output_type -> m3uetcpb.Empty
	14, // 31: m3uetcpb.QuerySvc.SubscribeToQueryStore:output_type -> m3uetcpb.SubscribeToQueryStoreResponse
	20, // 32: m3uetcpb.QuerySvc.UnsubscribeFromQueryStore:output_type -> m3uetcpb.Empty
	23, // [23:33] is the sub-list for method output_type
	13, // [13:23] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_m3uetcpb_query_proto_init() }
func file_api_m3uetcpb_query_proto_init() {
	if File_api_m3uetcpb_query_proto != nil {
		return
	}
	file_api_m3uetcpb_empty_proto_init()
	file_api_m3uetcpb_perspective_proto_init()
	file_api_m3uetcpb_track_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_m3uetcpb_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryByRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryByResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryInPlaylistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryInPlaylistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryInQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToQueryStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeFromQueryStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_m3uetcpb_query_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_m3uetcpb_query_proto_goTypes,
		DependencyIndexes: file_api_m3uetcpb_query_proto_depIdxs,
		EnumInfos:         file_api_m3uetcpb_query_proto_enumTypes,
		MessageInfos:      file_api_m3uetcpb_query_proto_msgTypes,
	}.Build()
	File_api_m3uetcpb_query_proto = out.File
	file_api_m3uetcpb_query_proto_rawDesc = nil
	file_api_m3uetcpb_query_proto_goTypes = nil
	file_api_m3uetcpb_query_proto_depIdxs = nil
}
