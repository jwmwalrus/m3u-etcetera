// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: api/m3uetcpb/playlist.proto

package m3uetcpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlaylistExportFormat int32

const (
	PlaylistExportFormat_PLEF_NONE PlaylistExportFormat = 0
	PlaylistExportFormat_PLEF_M3U  PlaylistExportFormat = 1
	PlaylistExportFormat_PLEF_PLS  PlaylistExportFormat = 2
)

// Enum value maps for PlaylistExportFormat.
var (
	PlaylistExportFormat_name = map[int32]string{
		0: "PLEF_NONE",
		1: "PLEF_M3U",
		2: "PLEF_PLS",
	}
	PlaylistExportFormat_value = map[string]int32{
		"PLEF_NONE": 0,
		"PLEF_M3U":  1,
		"PLEF_PLS":  2,
	}
)

func (x PlaylistExportFormat) Enum() *PlaylistExportFormat {
	p := new(PlaylistExportFormat)
	*p = x
	return p
}

func (x PlaylistExportFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlaylistExportFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_api_m3uetcpb_playlist_proto_enumTypes[0].Descriptor()
}

func (PlaylistExportFormat) Type() protoreflect.EnumType {
	return &file_api_m3uetcpb_playlist_proto_enumTypes[0]
}

func (x PlaylistExportFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlaylistExportFormat.Descriptor instead.
func (PlaylistExportFormat) EnumDescriptor() ([]byte, []int) {
	return file_api_m3uetcpb_playlist_proto_rawDescGZIP(), []int{0}
}

type PlaylistGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Perspective Perspective `protobuf:"varint,4,opt,name=perspective,proto3,enum=m3uetcpb.Perspective" json:"perspective,omitempty"`
	CreatedAt   int64       `protobuf:"varint,101,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   int64       `protobuf:"varint,102,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PlaylistGroup) Reset() {
	*x = PlaylistGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_playlist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistGroup) ProtoMessage() {}

func (x *PlaylistGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_playlist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistGroup.ProtoReflect.Descriptor instead.
func (*PlaylistGroup) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_playlist_proto_rawDescGZIP(), []int{0}
}

func (x *PlaylistGroup) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlaylistGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlaylistGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PlaylistGroup) GetPerspective() Perspective {
	if x != nil {
		return x.Perspective
	}
	return Perspective_MUSIC
}

func (x *PlaylistGroup) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PlaylistGroup) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Playlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Open            bool        `protobuf:"varint,4,opt,name=open,proto3" json:"open,omitempty"`
	Active          bool        `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	Transient       bool        `protobuf:"varint,6,opt,name=transient,proto3" json:"transient,omitempty"`
	Bucket          bool        `protobuf:"varint,7,opt,name=bucket,proto3" json:"bucket,omitempty"`
	QueryId         int64       `protobuf:"varint,8,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	PlaylistGroupId int64       `protobuf:"varint,9,opt,name=playlist_group_id,json=playlistGroupId,proto3" json:"playlist_group_id,omitempty"`
	Duration        int64       `protobuf:"varint,10,opt,name=duration,proto3" json:"duration,omitempty"`
	Perspective     Perspective `protobuf:"varint,11,opt,name=perspective,proto3,enum=m3uetcpb.Perspective" json:"perspective,omitempty"`
	CreatedAt       int64       `protobuf:"varint,101,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       int64       `protobuf:"varint,102,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Playlist) Reset() {
	*x = Playlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_playlist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Playlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Playlist) ProtoMessage() {}

func (x *Playlist) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_playlist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Playlist.ProtoReflect.Descriptor instead.
func (*Playlist) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_playlist_proto_rawDescGZIP(), []int{1}
}

func (x *Playlist) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Playlist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Playlist) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Playlist) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *Playlist) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Playlist) GetTransient() bool {
	if x != nil {
		return x.Transient
	}
	return false
}

func (x *Playlist) GetBucket() bool {
	if x != nil {
		return x.Bucket
	}
	return false
}

func (x *Playlist) GetQueryId() int64 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *Playlist) GetPlaylistGroupId() int64 {
	if x != nil {
		return x.PlaylistGroupId
	}
	return 0
}

func (x *Playlist) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Playlist) GetPerspective() Perspective {
	if x != nil {
		return x.Perspective
	}
	return Perspective_MUSIC
}

func (x *Playlist) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Playlist) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type PlaylistTrack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position      int32 `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	Dynamic       bool  `protobuf:"varint,3,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	Lastplayedfor int64 `protobuf:"varint,4,opt,name=lastplayedfor,proto3" json:"lastplayedfor,omitempty"`
	PlaylistId    int64 `protobuf:"varint,5,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	TrackId       int64 `protobuf:"varint,6,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	CreatedAt     int64 `protobuf:"varint,101,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64 `protobuf:"varint,102,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PlaylistTrack) Reset() {
	*x = PlaylistTrack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_m3uetcpb_playlist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistTrack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistTrack) ProtoMessage() {}

func (x *PlaylistTrack) ProtoReflect() protoreflect.Message {
	mi := &file_api_m3uetcpb_playlist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistTrack.ProtoReflect.Descriptor instead.
func (*PlaylistTrack) Descriptor() ([]byte, []int) {
	return file_api_m3uetcpb_playlist_proto_rawDescGZIP(), []int{2}
}

func (x *PlaylistTrack) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlaylistTrack) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *PlaylistTrack) GetDynamic() bool {
	if x != nil {
		return x.Dynamic
	}
	return false
}

func (x *PlaylistTrack) GetLastplayedfor() int64 {
	if x != nil {
		return x.Lastplayedfor
	}
	return 0
}

func (x *PlaylistTrack) GetPlaylistId() int64 {
	if x != nil {
		return x.PlaylistId
	}
	return 0
}

func (x *PlaylistTrack) GetTrackId() int64 {
	if x != nil {
		return x.TrackId
	}
	return 0
}

func (x *PlaylistTrack) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PlaylistTrack) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_api_m3uetcpb_playlist_proto protoreflect.FileDescriptor

var file_api_m3uetcpb_playlist_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2f, 0x70,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d,
	0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x1a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x33, 0x75,
	0x65, 0x74, 0x63, 0x70, 0x62, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x37, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8c, 0x03, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf5, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x24, 0x0a,
	0x0d, 0x6c, 0x61, 0x73, 0x74, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x66, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64,
	0x66, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x41, 0x0a,
	0x14, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4c, 0x45, 0x46, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x45, 0x46, 0x5f, 0x4d, 0x33, 0x55,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x45, 0x46, 0x5f, 0x50, 0x4c, 0x53, 0x10, 0x02,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6d, 0x33, 0x75, 0x65, 0x74, 0x63, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_m3uetcpb_playlist_proto_rawDescOnce sync.Once
	file_api_m3uetcpb_playlist_proto_rawDescData = file_api_m3uetcpb_playlist_proto_rawDesc
)

func file_api_m3uetcpb_playlist_proto_rawDescGZIP() []byte {
	file_api_m3uetcpb_playlist_proto_rawDescOnce.Do(func() {
		file_api_m3uetcpb_playlist_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_m3uetcpb_playlist_proto_rawDescData)
	})
	return file_api_m3uetcpb_playlist_proto_rawDescData
}

var file_api_m3uetcpb_playlist_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_m3uetcpb_playlist_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_m3uetcpb_playlist_proto_goTypes = []interface{}{
	(PlaylistExportFormat)(0), // 0: m3uetcpb.PlaylistExportFormat
	(*PlaylistGroup)(nil),     // 1: m3uetcpb.PlaylistGroup
	(*Playlist)(nil),          // 2: m3uetcpb.Playlist
	(*PlaylistTrack)(nil),     // 3: m3uetcpb.PlaylistTrack
	(Perspective)(0),          // 4: m3uetcpb.Perspective
}
var file_api_m3uetcpb_playlist_proto_depIdxs = []int32{
	4, // 0: m3uetcpb.PlaylistGroup.perspective:type_name -> m3uetcpb.Perspective
	4, // 1: m3uetcpb.Playlist.perspective:type_name -> m3uetcpb.Perspective
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_m3uetcpb_playlist_proto_init() }
func file_api_m3uetcpb_playlist_proto_init() {
	if File_api_m3uetcpb_playlist_proto != nil {
		return
	}
	file_api_m3uetcpb_perspective_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_m3uetcpb_playlist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_playlist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Playlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_m3uetcpb_playlist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistTrack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_m3uetcpb_playlist_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_m3uetcpb_playlist_proto_goTypes,
		DependencyIndexes: file_api_m3uetcpb_playlist_proto_depIdxs,
		EnumInfos:         file_api_m3uetcpb_playlist_proto_enumTypes,
		MessageInfos:      file_api_m3uetcpb_playlist_proto_msgTypes,
	}.Build()
	File_api_m3uetcpb_playlist_proto = out.File
	file_api_m3uetcpb_playlist_proto_rawDesc = nil
	file_api_m3uetcpb_playlist_proto_goTypes = nil
	file_api_m3uetcpb_playlist_proto_depIdxs = nil
}
